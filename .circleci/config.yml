version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  go-build:
    parameters:
      os:
        description: Target operating system
        type: enum
        enum: [ "linux", "darwin" ]
        default: "linux"
      arch:
        description: Target architecture
        type: enum
        enum: [ "amd64", "arm64" ]
        default: "amd64"
    steps:
      - run:
          working_directory: ~/project/cmd/honeyalb
          environment:
            GOOS: << parameters.os >>
            GOARCH: << parameters.arch >>
          command: |
            go build -ldflags "-X main.BuildID=${CIRCLE_TAG}" \
            -o $GOPATH/bin/honeyalb-<< parameters.os >>-<< parameters.arch >> \
            .
      - run:
          working_directory: ~/project/cmd/honeyelb
          environment:
            GOOS: << parameters.os >>
            GOARCH: << parameters.arch >>
          command: |
            go build -ldflags "-X main.BuildID=${CIRCLE_TAG}" \
            -o $GOPATH/bin/honeyelb-<< parameters.os >>-<< parameters.arch >> \
            .
      - run:
          working_directory: ~/project/cmd/honeycloudfront
          environment:
            GOOS: << parameters.os >>
            GOARCH: << parameters.arch >>
          command: |
            go build -ldflags "-X main.BuildID=${CIRCLE_TAG}" \
            -o $GOPATH/bin/honeycloudfront-<< parameters.os >>-<< parameters.arch >> \
            .
      - run:
          working_directory: ~/project/cmd/honeycloudtrail
          environment:
            GOOS: << parameters.os >>
            GOARCH: << parameters.arch >>
          command: |
            go build -ldflags "-X main.BuildID=${CIRCLE_TAG}" \
            -o $GOPATH/bin/honeycloudtrail-<< parameters.os >>-<< parameters.arch >> \
            .

jobs:
  build:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run: go test --timeout 10s -v ./...

  build_packages:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run: go install -ldflags "-X main.BuildID=${CIRCLE_TAG}" github.com/honeycombio/honeyaws/cmd/...
      - setup_remote_docker
      - run:
          name: apt_get_update
          command: sudo apt-get -qq update
      - run:
          name: apt_get_install
          command: sudo apt-get install -y build-essential rpm ruby ruby-dev
      - run:
          name: gem_install
          command: sudo gem install fpm
      - run: mkdir -p ~/artifacts
      - run:
          name: build_deb
          command: CIRCLE_TAG=`echo -n "${CIRCLE_TAG}" | sed 's/v//g'` && ./build-pkg.sh -v "${CIRCLE_TAG}" -t deb && cp $GOPATH/bin/honeyaws_${CIRCLE_TAG}_amd64.deb ~/artifacts
      - run:
          name: build_rpm
          command: CIRCLE_TAG=`echo -n "${CIRCLE_TAG}" | sed 's/v//g'` && ./build-pkg.sh -v "${CIRCLE_TAG}" -t rpm && cp $GOPATH/bin/honeyaws-${CIRCLE_TAG}-1.x86_64.rpm ~/artifacts
      - run: pkg-test/test.sh `echo -n "${CIRCLE_TAG}" | sed 's/v//g'`
      - go-build:
          os: linux
          arch: amd64
      - go-build:
          os: linux
          arch: arm64
      - go-build:
          os: darwin
          arch: amd64
      - run: cp $GOPATH/bin/honey* ~/artifacts
      - run: echo "finished builds" && find ~/artifacts -ls
      - persist_to_workspace:
          root: ~/
          paths:
            - artifacts
      - store_artifacts:
          path: ~/artifacts

  publish_github:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Publish Release on GitHub"
          command: |
            echo "about to publish to tag ${CIRCLE_TAG}"
            ls -l ~/artifacts/*
            ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ~/artifacts

  publish_s3:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: sync_s3_artifacts
          command: aws s3 sync ~/artifacts s3://honeycomb-builds/honeycombio/honeyaws/${CIRCLE_TAG}/

  publish_docker:
    docker:
      - image: circleci/golang:1.13
    steps:
      - restore_cache:
          keys:
            googkleko
      - run: go install github.com/google/ko@latest
      - save_cache:
          key: googkleko
          paths:
            - $GOPATH/bin/ko
      - checkout
      - setup_remote_docker
      - run:
          name: "Build and publish multi-arch docker image"
          command: |
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin;
            build/build_docker.sh

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - build_packages:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9].*/
            branches:
              ignore: /.*/
      - publish_github:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build_packages
          filters:
            tags:
              only: /^v[0-9].*/
            branches:
              ignore: /.*/
      - publish_s3:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build_packages
          filters:
            tags:
              only: /^v[0-9].*/
            branches:
              ignore: /.*/
      - publish_docker:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
          filters:
            tags:
              only: /.*/
